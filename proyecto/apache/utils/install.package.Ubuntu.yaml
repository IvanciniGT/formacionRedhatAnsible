
- name:               Asegurar que las claves de los repos apt están en la máquina
  apt_key:
    url:              "{{ item.1.key }}"
    state:            present
  when:               item.1.apt is defined and item.1.key is defined
  loop:               "{{ packages_to_install | subelements('repos', skip_missing=True) }}"
  # Ansible siempre primero ejecuta el loop.
  # Si hay un when, entonces el when es ejecutado para cada item del loop
  # SIEMPRE... SIN REMEDIO

- name:               Asegurar que los repos de apt están registrados en la máquina
  apt_repository:
    repo:             "{{ item.1.apt }}"
    state:            present
  loop:               "{{ packages_to_install | subelements('repos', skip_missing=True) }}"
  when:               item.1.apt is defined

- name:               Asegurar que apt está actualizado con la información de los repos
  apt:
    update_cache:     yes

- name:               Asegurar que la paquetería indicada está instalada
  apt:
    name: |
                      {{ item.name }}
                      {%- if item.version is defined -%}
                        ={{ item.version }}
                      {%- end if -%}

    state: |
                      {%- if item.version is defined -%}
                        present
                      {%- else -%}
                        latest
                      {%- end if -%}

  loop:               "{{ packages_to_install }}"



#item:
  #name:           git
  #version:        2.30
  #repos:
  #  - apt:        ppa:git-core/ppa
  #    key:        https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x4F4EA0AAE5267A6C
  #  - yum:        https://repos.fedorapeople.org/repos/jkaluza/git/epel-git.repo



